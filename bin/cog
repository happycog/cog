#!/bin/bash

# Yarn global adds the cog binary to your $PATH through a bunch of 
# symlinks. `readlink -f` isn't available on Mac, so this uses 
# Python to grab the fully resolved path of `cog` and then two
# `dirname`s to back out to the true installed repo directory.
export COG_DIRECTORY=$(dirname $(dirname $(python -c "import os; print(os.path.realpath('${BASH_SOURCE[0]}'))")));
# Color Format
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export BOLD='\033[0;22m'
export NC='\033[0m' # No Color

# Include all scripts inside the tools folder
for file in $COG_DIRECTORY/tools/*; do
  source $file
done

if [ -e .env ]; then
    source ./.env
fi


# cog requires an argument. If there is no argument, cog will call cog-help
CMD=${1:-help}; shift

# Check if /bin exist in current directory and automaticlly include the .env file
if [ -d "./bin" ]; then
  if [ -f "./bin/cog-$CMD" ]; then
    ( set -a; source .env 2> /dev/null; "./bin/cog-$CMD" "${@}")
  else
    ( set -a; source .env 2> /dev/null; "$COG_DIRECTORY/bin/cog-$CMD" "${@}" )
  fi
else
    ( set -a; source .env 2> /dev/null; "$COG_DIRECTORY/bin/cog-$CMD" "${@}" )
fi