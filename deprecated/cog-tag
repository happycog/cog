#!/bin/bash
# Description: Easicly Update tag

# Color Format
GREEN='\033[0;32m'
YELLOW="\033[0;33m"
BLUE='\033[0;34m'
RED='\033[0;31m'
BOLD='\033[0;22m'
NC='\033[0m' # No Color

ask() {
    while true; do
        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi
        read -p "$1 [$prompt] " REPLY </dev/tty
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}

createTag() {
  NEW_VERSION="v$1.$2.$3"
  echo -e "Updated version $VERSION ➡️  ${YELLOW}$NEW_VERSION${NC}"
  git tag -a $NEW_VERSION -m "$NEW_VERSION"
}

# Fetch tags
git fetch --tags

# Get latest version
VERSION=$(git describe --abbrev=0 --tags)

# Check if current project has tags
if [[ -z "$VERSION" ]]; then
  # No tags exist so create
  if ask "This project does not have any tags. Would you like to create tag v0.1.0?"; then
      git tag -a v0.1.0 -m "Initial tag v0.1.0"
      echo -e "✨  Tag ${YELLOW}v0.1.0${NC} created. Run ${GREEN}cog tag push${NC} to push your new tag."
  else
      echo -e "Well... try again ${BLUE}¯\_(ツ)_/¯${NC}"
  fi
else

# Strip "v" from tag
VERSION_VALUE=( ${VERSION//v/} )
# Strip "." from tag
EXTRACTED_VERSION=(${VERSION_VALUE//.})

# Store each digit
MAJOR_VALUE=${EXTRACTED_VERSION:0:1}
MINOR_VALUE=${EXTRACTED_VERSION:1:1}
PATCH_VALUE=${EXTRACTED_VERSION:2:1}

  # Check if arugment passed with cog tag
if [ -z "$1" ];
  then
    echo -e "Your latest tag is ${YELLOW}$VERSION${NC}"
    echo -e "Run ${GREEN}cog tag [ major | minor | patch | push ]${NC}"
  elif [[ $1  == 'major' ]]; then
    MAJOR_VALUE=$((MAJOR_VALUE+1))
    MINOR_VALUE=0
    PATCH_VALUE=0
    createTag $MAJOR_VALUE $MINOR_VALUE $PATCH_VALUE
  elif [[ $1  == 'minor' ]]; then
    # If v1.9.0
    if [[ $MINOR_VALUE == 9 ]]; then
      MAJOR_VALUE=$((MAJOR_VALUE+1))
      MINOR_VALUE=0
      PATCH_VALUE=0
      # If v2.0.0
      createTag $MAJOR_VALUE $MINOR_VALUE $PATCH_VALUE
      else
        MINOR_VALUE=$((MINOR_VALUE+1))
        PATCH_VALUE=0
        createTag $MAJOR_VALUE $MINOR_VALUE $PATCH_VALUE
    fi
  elif [[ $1  == 'patch' ]]; then
    # If v.1.0.9
    if [[ $PATCH_VALUE == 9 ]]; then
      # If v.1.9.9
      if [[ $MINOR_VALUE == 9 ]]; then
        echo '9'
        MAJOR_VALUE=$((MAJOR_VALUE+1))
        MINOR_VALUE=0
        PATCH_VALUE=0
        createTag $MAJOR_VALUE $MINOR_VALUE $PATCH_VALUE
      fi
      MINOR_VALUE=$((MINOR_VALUE+1))
      PATCH_VALUE=0
      createTag $MAJOR_VALUE $MINOR_VALUE $PATCH_VALUE
    else
      PATCH_VALUE=$((PATCH_VALUE+1))
      createTag $MAJOR_VALUE $MINOR_VALUE $PATCH_VALUE
    fi
  elif [[ $1  == 'push' ]]; then
    git push --tags
    exit 0
   else
     echo -e "${RED}Error${NC}: cog tag [ major | minor | patch | push ]"
     exit 0
  fi
fi
